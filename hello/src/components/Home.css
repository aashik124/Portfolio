.hero1 {
  height: 102vh;
  background: linear-gradient(to right, #ffffff, rgb(140, 127, 127)); 
  color: #002244;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0 60px;
  box-sizing: border-box;
  margin-top: -140px;
  padding-top: 50px;
}

.hero {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-left: -120px;
  width: 100%;
  padding: 140px 50px 100px 50px;
  max-width: 1200px;
}

.cta {
  margin-top: 20px;
  background: #00bcd4;
  color: white;
  padding: 10px 20px;
  text-decoration: none;
  border-radius: 4px;
}

    .hero-text {
  max-width: 600px;
  margin-left: 0;
  text-align: left;
}

.hero-text .frontend {
    font-size: 30px;
}

.hero-text h1 {
  font-size: 48px;
  margin-bottom: 10px;
  font-weight: 700;
  color: #002244;
  line-height: 1.3;
}

.hero-text h1 span {
  color: #ff8200;
}

.hero-text p {
  font-size: 20px;
  margin: 20px 0;
}

.hero-text p span {
  color: #b30000;
}

.cursor {
  animation: blink 1s infinite;
  font-size: 35px;
}

@keyframes blink {
  0%, 100% { opacity: 1 }
  50% { opacity: 0 }
}

.btn {
  padding: 12px 25px;
  background-color: blue;
  color: white;
  border: none;
  border-radius: 30px;
  font-weight: 600;
  font-size: 16px;
  cursor: pointer;
  transition: background 0.3s;
  margin-top: 20px;
}

.btn:hover {
  background-color: blueviolet;
}


   .social-icons {
  margin-top: 30px;
  display: flex;
  gap: 20px;
}

.social-icons a {
  font-size: 20px;
  background: #002244;
  color: white;
  padding: 10px;
  border-radius: 50%;
  text-decoration: none;
  transition: background 0.3s;
}

.social-icons a:hover {
  background: #7c907e;
}


.image {
  width: 400px;
  height: 400px;
  border-radius: 50%;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: gray;
  margin-top: -60px;
  margin-right: -70px;
  background-color: #ffffff;
}

.image img {
  width: 86%;
  object-fit:scale-down;
}

.reveal-section {
  animation: fadeInUp 1s ease-out forwards;

}

/* Initial state of elements to be revealed */
.reveal {
  opacity: 1;
  transform: translateY(40px);
  transition: all 1s ease;
}

/* When element is visible in viewport */
.reveal-visible {
  opacity: 0;
  transform: translateY(0);
}
